[metadata]
name = readme-coverage-badger
version = attr: readme_coverage_badger.__version__
description = automatically generates your project's coverage badge using the shields.io service, and then updates your README
long_description = file: README.md, CHANGELOG.md, LICENSE
long_description_content_type = text/markdown; charset=UTF-8
author = Victor Miti
author_email = hello@victor.co.zm
keywords = coverage badge shield readme
license = BSD 3-Clause License
url = https://github.com/engineervix/readme-coverage-badger/
platforms = any
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: BSD License
    Natural Language :: English
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Software Development :: Testing
    Topic :: Text Processing :: Markup :: Markdown
    Topic :: Utilities
project_urls =
    Bug Tracker = https://github.com/engineervix/readme-coverage-badger/issues
    Changelog = https://github.com/engineervix/readme-coverage-badger/blob/master/CHANGELOG.md
    Documentation = https://github.com/engineervix/readme-coverage-badger/blob/master/README.md
    Download = https://pypi.org/project/readme-coverage-badger/#files
    Source = https://github.com/engineervix/readme-coverage-badger/

[options]
packages = readme_coverage_badger
include_package_data = True
python_requires = >=3.8
install_requires =
    colorama
    coverage

[options.entry_points]
console_scripts =
    readme-cov = readme_coverage_badger.__main__:main

# --- Individual linter configuration ---------------------------------------

[flake8]
ignore = E203, E266, E501, W503, F403, F401
max-line-length = 120
max-complexity = 18
select = B,C,E,F,W,T4,B9
exclude = .git,__pycache__,__init__.py,.mypy_cache,.pytest_cache,.tox

[mypy]
ignore_missing_imports = True
follow_imports = skip
strict_optional = True
# disallow_untyped_defs = True

# --- See pyproject.toml for other linter configurations (black, isort) -----

# --- See pyproject.toml for commitizen configuration -----------------------

# --- Coverage configuration ------------------------------------------------

[coverage:run]
omit =
    venv/*
    tests/*
    .tox/*
    tasks.py

branch = True

[coverage:report]
skip_covered = True

show_missing = True

# --- pytest configuration --------------------------------------------------

# See warning at https://docs.pytest.org/en/stable/reference/customize.html#setup-cfg
# I put the config here because I somehow couldn't get tox to play nicely with settings in pyproject.toml

[tool:pytest]
addopts =
    --cov=. --cov-append --cov-report html --cov-report xml --cov-report term-missing:skip-covered -s -vv
testpaths = tests

# --- tox automation configuration -------------------------------------------

[tox:tox]
envlist = lint, py38, py39, py310, py311, py312
isolated_build = True

[gh-actions]
python =
    3.12: lint, py312
    3.11: py311
    3.10: py310
    3.9: py39
    3.8: py38

[testenv:lint]
skip_install = True
basepython = python
deps =
    -r{toxinidir}/requirements_dev.txt
commands =
    # invoke lint
    # invoke's pty=True not supported on Windows
    mypy readme_coverage_badger
    black . --check
    isort --check-only --profile black .
    flake8 tests readme_coverage_badger

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
deps =
    -r{toxinidir}/requirements_dev.txt
commands =
    pytest
